---
import Layout from '../layouts/Layout.astro';
import Card from '../components/Card.astro';
import '@fontsource/notable';
import '@fontsource-variable/hepta-slab';
let imgScale = 1;
---

<Layout title="test">
	<!doctype html>
	<html lang="en">
 	 	<head>
    		<title>Tyhjyyden Valu</title>
 	 	</head>
 	 <body>
		<main>
			<section>
				<h1 id="title" class="font-extralight">Tyhjyyden valu</h1>
			</section>
			<section>
				<div class="essaybox">
					<br>
					<br>
					1. 
					<br>
					<br>
					Kun mietimme tilaa, mietimme seiniä ja niiden välistä tyhjyyttä. Tila on 
					rajaamista, tila ei ole tyhjyyttä, avaruutta eikä äärettömyyttä, tilalla on aina rajat. 
					Aivan kuten piirrämme paperille muotoja, niin piirrämme niitä myös 
					ympärillemme. Teemme luonnosta tiloja itsellemme, omimme ja valloitamme sitä 
					aidoilla, muureilla, seinillä, köysillä, tolpilla, katoilla ja lattioilla. 
					<br>
					<br>
					Jos lattialle heittää narukiepin, kissa hyppää sen keskelle. Eläimetkin pyrkivät 
					pakoon avaruudelta, ne kaivavat koloja, tekevät pesiä, pujahtavat luoliin kuten 
					mekin aikoinaan. 
					<br>
					<br>
					Ajattelemme tilaa, mutta emme ajattele sen kulumista. Sen sijaan ajattelemme, 
					että aika kuluu ja olemme siitä huolissamme, mutta tilan kulumista emme niin 
					ajattele. Emme ajattele, että kulutamme sitä rajallista määrää avaruutta, joka on 
					maapallon pinta-ala (510 069 000 neliökilometriä). Aikamme on rajallinen, mutta 
					tilaa tuhlataan kuin sillä ei olisi rajoja. 
					<br>
					<br>
					Tietenkin tila maksaa, sen me tajuamme. Tonttien hinnat ovat kaupunkien 
					keskustoissa kalleimmat. Sen pidemmälle emme pääse tuhlaamisen 
					ajatuksessamme, vain rahaan. 
					<br>
					<br>
					Kun katsomme ympärille, näemme erilaisia tiloja. Katse pysähtyy väkisinkin 
					niiden rajoihin. Tila on tyhjyyden rajaamista sekä sisältä että ulkoa. Jos tiloja ei 
					olisi, katse ulottuisi sinne missä pupillin voima lakkaa. Ihmissilmä näkee viiden 
					kilometrin päähän maanpinnalla. Mutta taivaalle katsoessaan ihminen kurkottaa 
					Andromedaan, 2,5 miljoonan valovuoden päähän. 
					<br>
					<br>
					Harvoin mietimme myöskään sitä, että tila kertoo arvoistamme. Keille tiloja 
					rajataan, kenen tarpeisiin tilat tehdään, kuka varaa ja asuttaa tilat? Tilat ovat 
					syvästi hierarkisia – slummeissa ihmiset asuvat ahtaasti, nukkuvat vuoroissa, 
					päällekkäin, ulostavat ja rakastelevat kaikkien näkyvillä. Vauraalla väellä on 
					mahdollisuus vetäytyä piiloon, olla näkymättömiä myös ihmisten keskellä. 
					Privaattius on rikkaan etuoikeus. Siksi muurit, siksi tummennetut lasit, siksi 
					sulkeutuvat portit ja lukot. 
					<br>
					<br>
					Lukittu tila, avain, yksityisyys – vain  murto-osa tiloista on kaikille avoimia. Koti 
					on tila, jonka olennainen ominaisuus on paluu. Kotiin palataan sen jälkeen kun on 
					liikuttu muualle ja antauduttu muutoksen ja turvattomuuden mahdollisuudelle. 
					Kotona voi levätä, sieltä haetaan turvaa, vaikka tuo turva olisi kuinka näennäinen. 
					Kotona näet myös kuollaan. 
					<br>
					<br>
					Auto taas on tila, jota liikutamme. Autossa yhdistyy kodin turva ja muutoksen 
					pelko, se on siis tilana oksymoron. Mutta juuri sellaisena se kiehtoo meitä, juuri 
					siksi autosta on tullut vapauden symboli. Nyt, kun sen käyttöön liittyy uhkaa ja 
					eettisiä ongelmia, sen merkitys huojuu. Autosta on vaikea luopua, sen käytön 
					rajoittaminen ahdistaa. Mikään muu väline ei tarjoa samanlaista turvan ja 
					seikkailun yhtäaikaista liittoa kuin se. 
					<br>
					<br>
					Auto on siksi mitä suurimmin myös ideologiaa. Joskus se on enemmänkin, 
					ihmisillä on autoonsa suhde. Autoa palvotaan. Sitä hoidetaan. Se kertoo 
					omistajastaan niin kuin lemmikki. Sille varataan omia tiloja, tiloja, jotka kertovat 
					meistä ja arvoistamme yhdenlaista tarinaa. 
					<br>
					<br>
					2. 
					<br>
					<br>
					Astu sisään parkkihalliin, kun on yö. Päivällä nuo tilat ovat käytössä, yö tyhjentää 
					niistä suurimman osan. Kun vaihdamme mielialaa ja toiminnan luonteen, 
					vaihdamme myös tilaa. 
					<br>
					<br>
					Nyt tuo tila, halli, on riisuttu toiminnastaan. Jäljellä on vain merkitsijä ilman 
					merkittyä, kirjaimia ilman sanoja. 
					<br>
					<br>
					Millä muulla nämä tilat voisi täyttää? Mielikuvitus alkaa valaa tarinaa niiden 
					tyhjyydestä, niiden betonisesta kylmyydestä.  Korva kuulee etäisiä kalahduksia, 
					ilmastolaitteiden hurinaa, virinää, omien askelten kaikuja. Tila ei viettele eikä 
					houkuta, ihminen ei viihdy sen kylmässä töykeydessä, ehkä auto viihtyy. Se ajaa 
					asiansa ja tuo asia on tilapäinen säilyttäminen, sekin käsitteenä kumman 
					ristiriitainen. 
					<br>
					<br>
					Kun ihminen kävelee ilman autoa tyhjässä parkkihallissa, hän tajuaa yhtäkkiä 
					oman inhimillisyytensä. Kun tiloista tehdään hyperfunktionaalisia, sattuman ja 
					kaaoksen lait minimoidaan. Mitään yllättävää on lähes mahdoton tapahtua 
					tällaisessa tilassa. Ajatelkaa parkkihallien lisäksi käytävää, tunnelia tai portaita. 
					Hissiä. Niiden ankaria imperatiiveja. 
					<br>
					<br>
					Funktion tarkoitus on nimenomaan sulkea pois sattumanvaraisuus. Juuri se tuo 
					turvaa. Elämä sujuvoituu. Tilan funktio säästää aikaa, jotta voimme siirtyä toiseen 
					tilaan. Mutta jos sekin on yhtä funktionaalinen, missä alkaa se aika, joka on varattu 
					sotkuiselle, uutta luovalle elämällemme? Joutomaat kaupunkitilojen välissä ovat 
					yhä harvinaisempia, joutorakennuksista puhumattakaan. 
					<br>
					<br>
					Jossakin vaiheessa tilaan on vain pysähdyttävä. Tila on valloitettava omiin 
					tarkoitusperiin. Sen funktionaalisuutta vastaan on noustava kapinaan. 
					<br>
					<br>
					Tila on otettava elämän haltuun, siihen on tuotava kaaoksen mahdollisuus. Ja mikä 
					oudointa, kun mieli luo tilassa uusia merkityksiä, myös ajan lineaarisuus 
					poimuuntuu. Aika kuluu samaan aikaan sekä nopeasti että hitaasti. 
					<br>
					<br>
					Kun elämä on niin täynnä kuin voi, siinä on paradoksaalisesti tilan tuntu.  
					<br>
					<br>
					Sattumat tapahtuvat vain vapaassa tilassa. Sattuma on vapauden tila. 
					<br>
					<br>
					</div>'
					<h1>
						<p><u><h1 id="takaisin" class="font-extralight"><a href="/gallery_1513">Takaisin</a></h1></u></p>
					</h1>
			</section>
            
		</main>
		<hr>
  	</body>
	</html>
</Layout>

<style define:vars={{ imgScale }}>

	body {
		display: flex;
		flex-direction: column;
		margin: 0px;
		padding: 0em;
		background-color: white;
		/*overflow: hidden;*/
		/*min-height: 100svh;*/
	}
	
	h1 {
		line-height: normal;
		color: black;	
		text-align: center;
		font-family: 'Hepta Slab Variable', serif;	
		margin-bottom: 20px;
		margin-top: 10px;
	}

	h2 {
		font-family: 'Hepta Slab Variable', serif;	
		text-align: center;
	}

	.essaybox
	{
		overflow: auto;
		max-width: 50%;
		width: 50%;
		margin: auto;
		
	}

	#footer {
		position:fixed;
		bottom: 0;
		left: 0;
		right: 0;
		width: 100%;
		display: flex;
		flex-direction: row;
		justify-content: center;
		gap: 2rem;
		padding-top: 1%;
		z-index: 999;
	}

    .gallery_img {
        max-width: 100%;
		width: 80%;
		display: block;
		transform-origin: top;
		transition: all 5s ease-in-out;
		margin: auto;
		cursor: pointer;
		opacity: 0.5;
		
    }
    
	
	.swiper {
	    overflow: visible;
	}


    #buttonsandbars {
		display: flex;
        margin:auto;
        flex-direction: row;
        justify-content: center;
		gap: 3px;
		margin-top: 150px;
    }

	#imgcontainer{
		width: 100%;
		max-width: 50vh;
        margin: auto;
		transition: all 5s ease-in-out;
		flex-direction: column;
		padding-left: 1rem;
		padding-right: 1rem;
		
	}

	#imgandbutton{
		
		display: block;
		width: 100%;
		max-width: 100%;
		margin:auto;
		transition: all 5s ease-in-out;
	}
	
	.swiper-button-prev {
		color: black;
	}
	.swiper-button-next {
		color: black;
	}

	.swiper-slide
	{
		transition: all 1s;
		margin-left: auto;
		margin-right: auto;
		
  
	}

    #image_swiper
    {
        margin-left: auto;
        margin-right: auto;
		/*width: 50%;*/
        
    }


	#playbutton{
		visibility: visible;
	}
	
	#pausebutton{
		visibility: hidden;
	}

	.controlbutton{
		display: inline-block;
		opacity: 0.5;
		cursor:pointer;
		transition: opacity 0.5s ease-in-out;
	}

	.controlbutton:hover {
		opacity: 1;
	}

	.controlbutton:active {
		opacity: 1;
	}

	h1{
		font-size: 1.2rem;
	}

	@media (min-width: 992px) {
		h1 {
			font-size: 2rem;
		}
	}

.playing {
  position: absolute;
  display: block;
  margin-top: 25px;
}
.now.playing .bar {
  display: inline-block;
  margin-right: 1px;
  
  width: 2px;
  height: 1px;
  overflow: hidden;
  background: grey;
  color: transparent;
  animation-name: pulse;
  animation-duration: 1s;
  animation-iteration-count: 0;
 
  
  
}

.paused.playing .bar {
  animation-iteration-count: infinite;
}


.n1 {
  animation-delay: 0.6s;
}
.n2 {
  animation-delay: 0.3s;
}
.n3 {
  animation-delay: 1.4s;
}
.n4 {
  animation-delay: 1.0s;
}
.n5 {
  animation-delay: 2.4s;
}
.n6 {
  animation-delay: 1.4s;
}
.n7 {
  animation-delay: 3.2s;
}
.n8 {
  animation-delay: 2.0s;
}
@keyframes pulse {
  0% {
    height: 1px;
    margin-top: 0;
  }
  10% {
    height: 20px;
    margin-top: -20px;
  }
  50% {
    height: 10px;
    margin-top: -10px;
  }
  60% {
    height: 20px;
    margin-top: -20px;
  }
  80% {
    height: 30px;
    margin-top: -30px;
  }
  100% {
    height: 1px;
    margin-top: 0;
  }
}
</style>

<script>
	import Swiper from 'swiper';
	import { Navigation, Pagination } from 'swiper/modules';
	// import Swiper and modules styles
	import 'swiper/css';
	import 'swiper/css/navigation';
	import 'swiper/css/pagination';

	const swiper = new Swiper('.swiper', {
	
	//swiper modules
	modules: [Navigation, Pagination],
	
	// Optional parameters
	direction: 'horizontal',
	loop: true,
	autoHeight: true,
    speed: 600,
  
	// If we need pagination
	pagination: {
	  el: '.swiper-pagination',
	},
  
	// Navigation arrows
	navigation: {
	  nextEl: '.swiper-button-next',
	  prevEl: '.swiper-button-prev',
	},
  });
	//test
    if(window.location.hash) {
		var hash = window.location.hash.substring(1); //Puts hash in variable, and removes the # character'
		swiper.slideTo(Number(hash)-1)
	}

	const button = document.querySelector("#Capa_1");

	const pauseButton = document.getElementById("pausebutton");
	const playButton = document.getElementById("playbutton");

	const allImages = Array.from(document.getElementsByClassName("gallery_img") as HTMLCollectionOf<HTMLElement>);
	const image1 = document.getElementById("img1");

	const arrow1 = document.getElementById("arrow1");
	const arrow2 = document.getElementById("arrow2");


	//var audio = new Audio('https://pub-6a26b65f31aa4f40b5c418ef13aac133.r2.dev/Be%20-%20Kindle%202023-09-09.flac');
	var audio = new Audio('https://dl.dropbox.com/scl/fi/7096koz7nj3ao6ph109er/t.wav?rlkey=8c4i46s1lg225sy5gow8autmn&st=yoq2nrck');
	audio.volume = 0;

	var player = document.getElementById("music");
	
	
	//img1Obj.style.opacity = "0.5";
	

	function imageUp() {
		togglePause();
		audio.volume = 0;
		volumeUp();
		
		//img1Obj.style.width = "100%";
		//img1Obj.style.opacity = "2";
		pauseButton.style.visibility = "visible";
		playButton.style.visibility = "hidden";
		console.log(audio.paused);
		player.style.visibility = "visible";
		player.classList.toggle("paused");
		

		for (let i = 0; i < allImages.length; i++) 
		{
  			allImages[i].style.width = "100%"
			allImages[i].style.opacity = "1"
		}
	}

	function imageDown() {
		audio.volume = 1;
		volumeDown();
		//img1Obj.style.width = "70%";
		//img1Obj.style.opacity = "0.5"
		
		pauseButton.style.visibility = "hidden";
		playButton.style.visibility = "visible";
		console.log(audio.paused);
		player.classList.toggle("paused");

		for (let i = 0; i < allImages.length; i++) 
		{
  			allImages[i].style.width = "80%";
			allImages[i].style.opacity = "0.5";
		}
	}

	function togglePause() {
		if (audio.paused) {
			audio.play();
		}
		else {
			audio.pause();
		}
	}


	function volumeUp() {
		if (audio.volume < 0.9) {
			audio.volume += 0.1;
			var timer = setTimeout(volumeUp,100);
		} else {
			audio.volume = 1;
		}
		}
		
	function volumeDown() {
		if (audio.volume > 0.1) {
			audio.volume -= 0.1;
			var timer = setTimeout(volumeDown,100);
		} 
		else{
			audio.volume = 0;
			togglePause();
		}	
	}



    image1.addEventListener('click', () => {
		console.log("it works");
		if (document.getElementById("pausebutton").style.visibility == "visible") {
			imageDown();
		} else {
			imageUp()	
		}

	});
	
    button.addEventListener('click', () => {
		console.log("it works");
		if (document.getElementById("pausebutton").style.visibility == "visible") {
			imageDown();
		} else {
			imageUp();
		}
		
	});
	

	
</script>

